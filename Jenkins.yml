AWSTemplateFormatVersion: '2010-09-09'
Description: This template create an Application Load Balancer with EC2 InfraStructure
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
  AmazonImageID:
    Description: The ID of the Amazon machine image (AMI)
    Type: String
    Default: 'ami-0ad704c126371a549'
  JenkinsAutomationRole:
    Description: The JenkinsAutomationRole of an instance
    Type: String
    Default: jenkinsautomationrole
  JenkinsAutomationProfile:
    Description: The JenkinsAutomationProfile for JenkinsAutomationRole of an instance
    Type: String
    Default: JenkinsAutomationProfile
  IAMManagedPolicy:
    Description: ManagedPolicy for JenkinsAutomationRole of an instance
    Type: String
    Default: PutS3ObjectPolicy
  BucketPrefix:
    Description: The BucketPrefix of an instance
    Type: String
    Default: cfm-s3

Resources:

  EC2Instance:
    DependsOn: InstanceSecurityGroup
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AmazonImageID 
      IamInstanceProfile: !Ref ManagedInstanceProfile
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      Monitoring: true
      BlockDeviceMappings:
        - DeviceName: /dev/sdc
          Ebs:
            SnapshotId: snap-041de31327a858319
            VolumeSize: 8
            VolumeType: io1
            Iops: 400
            DeleteOnTermination: true
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            sudo su
            yum update -y
            yum install -y httpd
            echo "Healthy" > /var/www/html/index.html
            service httpd start
            yum install java-1.8.0 -y
            yum install java-1.8.0-openjdk -y
            yum install git -y
            yum install maven -y
            yum install docker -y
            systemctl start docker
            chmod 777 /var/run/docker.sock
            wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo
            rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
            yum install jenkins -y
            service jenkins start 
            cat /var/lib/jenkins/secrets/initialAdminPassword
            echo "Initial Admin Password: $(cat /var/lib/jenkins/secrets/initialAdminPassword)" > /var/www/html/index.html

  InstanceSecurityGroup:
    DependsOn: ManagedInstanceProfile
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0  
      - IpProtocol: tcp
        FromPort: 8090
        ToPort: 8090
        CidrIp: 0.0.0.0/0  

  EC2SSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ssm.amazonaws.com
            - ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Path: "/"
      RoleName: !Ref JenkinsAutomationRole

  ManagedInstanceProfile:
    DependsOn: EC2SSMRole
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref EC2SSMRole
      InstanceProfileName: !Ref JenkinsAutomationProfile   
  
  S3ManagedPolicy:
    DependsOn: EC2SSMRole
    Type: AWS::IAM::ManagedPolicy
    Properties:
        Description: Policy for putting S3 Objects
        ManagedPolicyName: !Ref IAMManagedPolicy
        PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: "S3Policy"
              Effect: Allow
              Action:
              - s3:PutObject
              Resource: 
              - !Sub 'arn:aws:s3:::${BucketPrefix}*'
        Roles:
           - !Ref JenkinsAutomationRole
